services:
  traefik:
    build:
      context: ./traefik
      dockerfile: Dockerfile
    container_name: traefik
    env_file:
      - .env
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - internal
    #labels:
    # - traefik.http.middlewares.oathkeeper.forwardauth.address=http://oathkeeper:4456/decisions
    # - traefik.http.middlewares.oathkeeper.forwardauth.authResponseHeaders=X-Id-Token,Authorization

  # oathkeeper:
  #   image: oryd/oathkeeper:v0.40.9
  #   container_name: oathkeeper
  #   command:
  #     - serve
  #     - --config
  #     - /etc/config/oathkeeper.yml
  #   volumes:
  #     - ./oathkeeper/oathkeeper.yml:/etc/config/oathkeeper.yml
  #     - ./oathkeeper/rules:/etc/oathkeeper/rules
  #   networks:
  #     - internal

  kratos:
    build:
      context: ./kratos
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: kratos
    environment:
      - DSN=postgres://kratos:kratos@db-kratos:5432/kratos?sslmode=disable
    depends_on:
      - db-kratos
    networks:
      - internal
    labels:
      - traefik.http.routers.kratos.rule=Host(`idp.acstane.test`)
      - traefik.http.services.kratos.loadbalancer.server.port=4433
      - traefik.http.services.kratos.loadbalancer.server.scheme=http
      - traefik.http.routers.kratos.entrypoints=websecure
      - traefik.http.routers.kratos.tls=true

  hydra:
    build:
      context: ./hydra
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: hydra
    environment:
      - DSN=postgres://hydra:hydra@db-hydra:5432/hydra?sslmode=disable
    depends_on:
      - db-hydra
    networks:
      - internal
    labels:
      - traefik.http.routers.hydra.rule=Host(`oidc.acstane.test`)
      - traefik.http.services.hydra.loadbalancer.server.port=4444
      - traefik.http.services.hydra.loadbalancer.server.scheme=http
      - traefik.http.routers.hydra.entrypoints=websecure
      - traefik.http.routers.hydra.tls=true

  id-portal:
    build:
      context: ../../IdPortal
      dockerfile: Dockerfile
      target: production
    container_name: id-portal
    env_file:
      - .env
    networks:
      - internal
    labels:
      - traefik.http.routers.portal.rule=Host(`id.acstane.test`)
      - traefik.http.services.portal.loadbalancer.server.port=3000
      - traefik.http.routers.portal.entrypoints=websecure
      - traefik.http.routers.portal.tls=true
      #- traefik.http.routers.portal.middlewares=oathkeeper@docker

  db-kratos:
    image: postgres:15
    container_name: db-kratos
    environment:
      - POSTGRES_USER=kratos
      - POSTGRES_PASSWORD=kratos
      - POSTGRES_DB=kratos
    volumes:
      - kratos-db-data:/var/lib/postgresql/data
    networks:
      - internal

  db-hydra:
    image: postgres:15
    container_name: db-hydra
    environment:
      - POSTGRES_USER=hydra
      - POSTGRES_PASSWORD=hydra
      - POSTGRES_DB=hydra
    volumes:
      - hydra-db-data:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  kratos-db-data:
  hydra-db-data:

networks:
  internal:
    driver: bridge
