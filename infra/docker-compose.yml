services:
  kratos:
    image: oryd/kratos:v1.3.1
    container_name: kratos
    environment:
      - DSN=postgres://kratos:kratos@db-kratos:5432/kratos?sslmode=disable
    entrypoint:
      - sh
      - -c
      - |
        echo "Running Kratos migrations..."
        kratos migrate sql -e "postgres://kratos:kratos@db-kratos:5432/kratos?sslmode=disable" up --yes
        echo "Starting Kratos server..."
        kratos serve all --config /etc/config/kratos.yml
    volumes:
      - ./kratos/kratos.yml:/etc/config/kratos.yml
      - ./kratos/identity.schema.json:/etc/config/identity.schema.json
    depends_on:
      - db-kratos
    networks:
      - internal

  hydra:
    image: oryd/hydra:v2.3.0
    container_name: hydra
    entrypoint:
      - sh
      - -c
      - |
        echo "Running Hydra migrations..."
        hydra migrate sql -e "postgres://hydra:hydra@db-hydra:5432/hydra?sslmode=disable" up --yes
        echo "Starting Hydra server..."
        hydra serve all --config /etc/config/hydra.yml
    volumes:
      - ./hydra/hydra.yml:/etc/config/hydra.yml
    environment:
      - ORY_SDK_URL=http://hydra:4445
      - DSN=postgres://hydra:hydra@db-hydra:5432/hydra?sslmode=disable
    depends_on:
      - db-hydra
    networks:
      - internal

  db-kratos:
    image: postgres:15
    container_name: db-kratos
    environment:
      - POSTGRES_USER=kratos
      - POSTGRES_PASSWORD=kratos
      - POSTGRES_DB=kratos
    volumes:
      - kratos-db-data:/var/lib/postgresql/data
    networks:
      - internal

  db-hydra:
    image: postgres:15
    container_name: db-hydra
    environment:
      - POSTGRES_USER=hydra
      - POSTGRES_PASSWORD=hydra
      - POSTGRES_DB=hydra
    volumes:
      - hydra-db-data:/var/lib/postgresql/data
    networks:
      - internal

  id-portal:
    build:
      context: ../../IdPortal
      dockerfile: Dockerfile
      target: production
    container_name: id-portal
    networks:
      - internal

volumes:
  kratos-db-data:
  hydra-db-data:

networks:
  internal:
    driver: bridge
